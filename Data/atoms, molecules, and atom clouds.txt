boomi provides a cloud-based integration platform. it supports two deployment models: an in-the-cloud deployment model used when all the integration endpoints are cloud-based, and an on-premise deployment model used when any integration endpoints are within a corporate network. if you use the cloud model, you can deploy your integration processes to a boomi atom cloud. if you use an on-premise model, boomi provides the atom, a lightweight java application deployed on a host with internet access. if you use the on-premise model and any of the following applies, consider utilizing a molecule: providing a high availability, load-balanced solution change the atom's process time or handling concerned that the atom's process might not run because of an outage if you need a multi-tenant solution to accommodate multiple customer accounts, consider setting up your own private atom cloud. atom, molecule, and atom cloud terminology if you work with atoms, molecules, and atom clouds, become familiar with the following terminology: process – an integration process. execution – an instance of a process running on an atom. it is single-threaded. jvm – a single operating system process, running on the java platform. cluster – one or more jvms working together as a logical molecule or cloud. node – a single molecule or cloud jvm running as part of a cluster. atom – a single-tenant, single-node runtime engine. molecule – a single-tenant, multiple-node runtime engine. cloud – a multiple-tenant, multiple-node runtime engine. forked execution – a separate, special-purpose jvm running a single process. computer – a single computer, which can be a physical or virtual machine. cpu – a processor in a computer, including physical, not virtual, cores. memory or ram – the transient working memory available for the cpu. hard disk or storage – the persistent, long-term data storage available on the computer. heap – the transient working memory for a jvm. a subset of memory is owned and managed by a java process. garbage collection – the algorithm used by java to manage the heap usage, constantly running in the background. thread – an running code path within a jvm. features comparison atoms, molecules, and atom clouds use the same basic technology but there are important differences between them. a molecule is an atom with multiple nodes. an atom cloud is a molecule that is available to multiple tenants. the following table shows the features available in each: search:columnfeaturesatommoleculeprivate atom cloudboomi atom cloud featuresatommoleculeprivate atom cloud boomi atom cloud multi-tenancy, which multiple accounts can use not supported not supported supported supported disk space monitoring not supported not supported supported supported forked execution (disabled by default on molecules) not supported supported supported supported multiple nodes providing load balancing and failover support not supported supported supported supported supports integrations that generate and receive a high volume of data not supported supported supported supported available to customers supported supported supported supported available to boomi partners supported supported supported supported