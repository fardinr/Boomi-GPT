the flow service component provides a means by which a flow service interacts with integration processes. the flow service component is independently deployable, enabling a single component to support all requests specifying a common endpoint. much of the back-end work you would otherwise have to program is automated, including:building and managing the connection converting common input fields into process properties (token, tenantid, stateid, callbackuri, culture, configurationvalues, authorization, etc.) implementing callback logic limiting the byte size of web service requests and rejecting requests after the limit is reached managing timeouts so that when a process doesn’t return a response, the listener returns a wait response to flow creating a integration process execution id for troubleshooting general tab name description metadata name description external nameenter a unique name for the service.path to servicethe value in this read-only field is derived from the specified external name. for example, if external name is sampleservice, path to service is /fs/sampleservice.clicking copy to clipboard copies the path to the system clipboard. to configure the flow service url in flow, paste the path into the url field for the service and insert the host name of the atom to which the flow service component will be deployed. for example, the url for a flow service deployed to the boomi usa east integration cloud is https://c01-usa-east-integrate.boomi.compath_to_service, which would equate to https://c01-usa-east-integrate.boomi.com/fs/sampleservice for an external name of sampleservice. configuration valuesconfiguration values identify account-specific information that is sent with each service request. each configuration value sent from a flow with a service request becomes a dynamic process property in the flow services server listener process that provides back-end processing for the requested action. these dynamic process properties are named inflowconfigurationvalues_<configuration_value_name> — for example, inflowconfigurationvalues_vendorid.to add a configuration value, use the add configuration value dialog. click add configuration value to open the dialog. its controls are as follows: name description nameunique name for the value.typedata type of the value — boolean, datetime, number, password, or string. string is the default. required by flow require that this value be specified in the flow that points to this componentif selected, this value is required in flows from which service requests originate. by default the value is not required. addadds the configuration value and closes the dialog.cancelcloses the dialog without adding a configuration value.you can modify or delete configuration values. message actions tab each message action defined for a flow service must be linked to a flow services server listener process that provides back-end processing for that action. to add a message action, use the add action dialog. click add message action to open the dialog. its controls are as follows: name description nameunique name for the action.descriptiondescription of the action (optional).processselects or creates the process to which to link the action.if you create a process, it is named as follows: external name plus “ - new action process.” consider changing that name to one that is more descriptive.addadds the action and closes the dialog.cancelcloses the dialog without adding an action. you can modify or delete actions. file resources tab a file resource must be defined for each file provider used with a flow service. each file resource must be linked to two flow services server listener processes, one for handling list files requests and the other for handling upload file requests. to add a file resource, use the add file resource dialog. click add file resource to open the dialog. its controls are as follows: name description pathunique path for the file resource.list files processselects or creates the listener process to handle list files requests for the file resource.if you create a process, it is named as follows: external name plus “ - new list files process.” consider changing that name to one that is more descriptive.upload file processselects or creates the listener process to handle upload file requests for the file resource.if you create a process, it is named as follows: external name plus “ - new upload file process.” consider changing that name to one that is more descriptive.addadds the file resource and closes the dialog.cancelcloses the dialog without adding a file resource. you can modify or delete file resources. data actions tab data action object types must be defined for handling flow data action service requests. each data action object type must be linked to a profile that specifies the object structure and to a flow services server listener process for handling each type of request specifying an object of that type — get, query, save, delete — for which handling is required. to add a data action object type, use the data action object type dialog. click add data action object type to open the dialog. its controls are as follows: name description object typeunique name for the object type.object type profileselects or creates a profile representing the object structure. the profile is stored as a flow type.descriptiondescription of the object type (optional).get processselects or creates the listener process to handle get requests specifying an object of this type.in that process, the flow services server connector sets the dynamic process property param_id to the value of the id field specified in the request. the param_id value is passed as a parameter to the outbound connector action on the data source. once the connector action is completed and the specified object is received, a return documents shape is used to pass the object to the flow.if you create a process, it is named as follows: external name plus “ - new get process.” consider changing that name to one that is more descriptive.query processselects or creates the listener process to handle query requests specifying an object of this type.the requesting flow optionally passes a query filter to that process in a json document. in the flow the filter is represented as a filtered list of the flow type in which the object type profile is stored. if a filter is not present in the request, the outbound connector action retrieves all objects from the data source. if a filter is present in the request, the flow services server connector action in the start shape transforms the json document to an xml query filter. subsequent processing may be necessary to transform that query filter into the filter format used in the outbound connector action on the data source. in either case, once the outbound connector action on the data source is completed and the query results are received, a return documents shape is used to pass the data to the flow.if you create a process, it is named as follows: external name plus “ - new query process.” consider changing that name to one that is more descriptive.save processselects or creates the listener process to handle save requests specifying an object of this type.the requesting flow passes the object to be saved in a json document of the flow type in which the object type profile is stored. a map is typically used to transform the object to prepare it for the connector action on the data source. if you create a process, it is named as follows: external name plus “ - new save process.” consider changing that name to one that is more descriptive.delete processselects or creates the listener process to handle delete requests specifying an object of this type.the requesting flow passes the object to be deleted in a json document of the flow type in which the object type profile is stored. a map is typically used to transform the object to prepare it for the connector action on the data source. if you create a process, it is named as follows: external name plus “ - new delete process.” consider changing that name to one that is more descriptive.addadds the data action object type and closes the dialog.cancelcloses the dialog without adding a data action object type. you can modify or delete data action object types.