the java virtual machine (jvm) security policies specify the permissions under which the jvm executes. this controls the jvm's access to local resources (such as local file system directories) and ability to perform certain actions within the infrastructure environment hosting the runtime. when you install a multi-tenant atom cloud or a single-tenant molecule, the runtime can be configured with one of two types of java security policies: high security policy the default security policy for atom clouds, which provides the maximum security necessary to run a secure multi-tenant cloud. this prevents individual tenants from accessing shared resources within the runtime which could impact other tenants. low security policy the default security policy that is distributed when you install a single-tenant molecule. a low security policy means that there are no security restrictions. the low security policy is used only when forked processing is enabled. forked processing is not enabled by default when you install a molecule. if you do not explicitly enable forked processing, your molecule will not use a security policy. processes will execute in the main atom’s jvm with full permissions. overriding the default security policy if you do not want to use the default security policies for atom clouds, single-tenant molecules, connector browse operations that run in forked executions, or atom workers in private atom clouds, then you must override the appropriate default security policy. this is not common. for example, you might want to change the default security policy level in the following use cases: if you are a partner who builds and executes all of your customers’ processes (that is, you control all of the tenants in the atom cloud), then you may want to use a low security policy. as the atom cloud owner you already have complete control over all of the processes. the high security policy denies access to all local network resources and file system resources outside of the account directory. if you are a partner or private cloud owner and you have local resources that you want to share with your customers or child accounts, but you also want to use a high security policy, then you should add custom permissions by using the atom security policies object (see the section below). you would add to it exceptions for the local resources that you want to share (for example an internal ftp server, an internal database, an internal web service, shared directories, etc.). to change the security policy level, use the following steps: in the manage menu, select atom management. select the atom cloud or molecule from the list on the left. in settings & configurations, select properties and then click the advanced tab. from the add property drop-down list, select the security policy property and then click add property. enter low or high in the security policy property value field. click save. customizing a security policy you can customize a high security policy by granting additional permissions by using the atom security policies object. adding custom permissions is common when you want to allow the runtime to access shared local resources suuch as an internal ftp server, databases, web service endpoints or ports, or file system directories. note: you must be an administrator to customize the security policy for an atom cloud or molecule. for more information, see the topic customizing security policies. custom security policy (legacy) important: the use of custom security policy files is deprecated as of june 10, 2023. you should convert to a high security policy and use the atom security policies object to manage any customizations. for more information, see the deprecation notice custom security policy file deprecation for private atom clouds.if you have customized your security policy, then you must reconfigure it so that the atom recognizes a third type of security policy: custom security policy custom is a security policy that you created most likely by copying an existing atom security policy file and modifying it to suit your needs. you must name the custom security policy file procrunner-custom.policy. for connector browse operations that run in forked executions, name the custom security policy file procbrowser-custom.policy and for atom workers in private atom clouds, name the custom security policy file procworker-custom.policy . additional resources java se 7 security documentation java 8 security documentation java se 7 default policy file syntax java 8 default policy file syntax java se 7 security permissions java 8 security permissions java 11 security documentation java 11 permission and security policy file syntax java 11 security permissions