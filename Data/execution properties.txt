execution properties contain run-time information related to a specific execution of an integration process. you can use execution properties in a process to support built-in testing logic, generate dynamic email notifications, or create custom reports. properties such as account id and execution id can also be useful for logging process activity and for troubleshooting. these properties, which are set and maintained automatically by the run-time engine, cannot be modified. the following execution properties are available:search:columnpropertydescriptionscripting valuepropertydescriptionscripting value account idthe id of the platform account on which the process is running. account_idatom id the id of the atom where the process is running. atom_idatom namethe name that was assigned to the atom when it was installed, or the local host name if no name was specified.note: if account properties are updated, for example when checking purge data, execution properties return the name of the attachment instead.atom_name document count the number of documents at the start of the current step in the process. document_countexecution id the id of this execution of the process. this is the execution id of the currently executing process, which could be a subprocess.execution_id node id for molecules and atom clouds, the id of the node where the process is running. node_idprocess id the id of the process. this is the process id of the currently executing process, which could be a subprocess.process_idprocess name the name of the process at the time it was deployed. this is the name of the currently executing process, which could be a subprocess. note: if the process name was changed after it was deployed, the process should be redeployed. process_nameexecution properties can be retrieved from the parameter value list for the following shapes: decision shape exception shape message shape notify shape process route shape program command shape set properties shape you can also retrieve execution properties within custom scripting by using the getruntimeexecutionproperty() method available within the executionutil class â€” for example, getruntimeexecutionproperty("execution_id").